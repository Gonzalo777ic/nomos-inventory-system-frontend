import { http } from '../http';
// 游꿢 Definici칩n de la Interfaz del Producto (Aseg칰rate de que esta interfaz coincida con la del modelo Java)
export interface Product {
    id?: number; // Opcional para creaci칩n
    sku: string;
    name: string;
    author: string;
    price: number;
    stock: number;
    imageUrl: string; // Coincide con el backend
    supplier: string;
}

const API_BASE_URL = '/inventory/products';

// 1. Obtener lista de productos (GET)
export const getProducts = async (): Promise<Product[]> => {
    // Si la tabla no usa paginaci칩n todav칤a, puedes hacer un GET simple
    const response = await http.get<Product[]>(API_BASE_URL);
    return response.data;
};

// 2. Crear un nuevo producto (POST)
export const createProduct = async (productData: Omit<Product, 'id'>): Promise<Product> => {
    // En el futuro, la subida de imagen se manejar칤a aqu칤 antes de enviar el JSON,
    // o el backend esperar칤a un DTO con la imagen codificada o un multipart/form-data.
    // Por ahora, asumimos que imageUrl es una URL simple o se gestiona autom치ticamente.
    const response = await http.post<Product>(API_BASE_URL, productData);
    return response.data;
};

// Otras funciones CRUD (UPDATE, DELETE) ir치n aqu칤...
